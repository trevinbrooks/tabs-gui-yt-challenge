{"version":3,"file":"bundle.js","sources":["../app/app/js/utils/event-emitter.ts","../node_modules/load-script2/index.js","../app/app/js/models/yt-options.ts","../app/app/js/utils/queue.ts","../app/app/js/yt.ts","../app/app/js/video.ts","../app/app/js/utils/type-checks.ts","../node_modules/tslib/tslib.es6.js","../app/app/js/index.ts"],"sourcesContent":["import { EventEmitter as NodeEmitter } from \"events\";\n\nexport type EventMap = Record<string, any>;\nexport type EventKey<T extends EventMap> = keyof T;\nexport type EventReceiver<T> = (params: T) => void;\n\nexport interface Emitter<T extends EventMap> {\n  on<K extends EventKey<T>>(eventName: K, fn: EventReceiver<T[K]>): void;\n  off<K extends EventKey<T>>(eventName: K, fn: EventReceiver<T[K]>): void;\n  emit<K extends EventKey<T>>(eventName: K, params: T[K]): void;\n}\n\nexport class EventEmitter<T extends EventMap> implements Emitter<T> {\n  private emitter = new NodeEmitter();\n\n  on<K extends EventKey<T>>(eventName: K, fn: EventReceiver<T[K]>) {\n    this.emitter.on(eventName as string, fn);\n  }\n\n  off<K extends EventKey<T>>(eventName: K, fn: EventReceiver<T[K]>) {\n    this.emitter.off(eventName as string, fn);\n  }\n\n  emit<K extends EventKey<T>>(eventName: K, params: T[K]) {\n    this.emitter.emit(eventName as string, params);\n  }\n}\n","/*! load-script2. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\nmodule.exports = function loadScript2 (src, attrs, parentNode) {\n  return new Promise((resolve, reject) => {\n    const script = document.createElement('script')\n    script.async = true\n    script.src = src\n\n    for (const [k, v] of Object.entries(attrs || {})) {\n      script.setAttribute(k, v)\n    }\n\n    script.onload = () => {\n      script.onerror = script.onload = null\n      resolve(script)\n    }\n\n    script.onerror = () => {\n      script.onerror = script.onload = null\n      reject(new Error(`Failed to load ${src}`))\n    }\n\n    const node = parentNode || document.head || document.getElementsByTagName('head')[0]\n    node.appendChild(script)\n  })\n}\n","export interface YTOptions extends YT.PlayerVars {\n    /**\n     * Player width.\n     */\n    width?: string | number | undefined;\n\n    /**\n     * Player height\n     */\n    height?: string | number | undefined;\n\n    /**\n     * ID of the video to load.\n     */\n    videoId?: string | undefined;\n\n    /**\n     * Points host to correct origin for CORS\n     */\n    host?: string | undefined;\n}\n\nexport const DefaultOptions: YTOptions = {\n    width: '100%',\n    videoId: undefined,\n    rel: 0,\n    origin: location.origin,\n    controls: 0,\n    showinfo: 0,\n    mute: 1,\n    modestbranding: 1,\n    enablejsapi: 1,\n    autoplay: 1,\n    loop: 1,\n};\n\n// helper function to return just the player vars\nexport function playerVars(options: YTOptions): YT.PlayerVars {\n    const { width, height, videoId, host, ...vars } = options;\n    return vars;\n}\n\n","import { EventEmitter, EventMap } from \"./event-emitter\";\n\nexport interface IQueue<T> {\n    enqueue(item: T): void;\n    dequeue(): T | undefined;\n    size(): number;\n}\n\nexport interface QueueEventMap<T> {\n    add: T;\n    remove: T;\n    empty: undefined;\n}\n\nexport class Queue<T> implements IQueue<T> {\n    public events = new EventEmitter<QueueEventMap<T>>();\n    private storage: T[] = [];\n\n    constructor(private capacity: number = Infinity) { }\n\n    enqueue(item: T): void {\n        if (this.size() === this.capacity) {\n            throw Error(\"Queue has reached max capacity, you cannot add more items\");\n        }\n        this.storage.push(item);\n        this.events.emit(\"add\", item);\n    }\n\n    dequeue(): T | undefined {\n        const remove = this.storage.shift();\n        this.events.emit(\"remove\", remove);\n        if (this.size() === 0) this.events.emit(\"empty\", undefined);\n        return remove;\n    }\n\n    size(): number {\n        return this.storage.length;\n    }\n\n    get empty(): boolean {\n        return this.size() === 0;\n    }\n}","/*! yt-player. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* updated by @tcbrooks with added functionality and to support TypeScript */\nimport { EventEmitter, EventMap } from \"./utils/event-emitter\";\n\nimport loadScript from \"load-script2\";\nimport { isFunction } from \"./utils/type-checks\";\nimport { DefaultOptions, YTOptions } from \"./models/yt-options\";\nimport { YTVideoData } from \"./models/yt-data\";\nimport { Queue } from \"./utils/queue\";\n\nconst YOUTUBE_IFRAME_API_SRC = \"https://www.youtube.com/iframe_api\";\n\n// Youtube player commands which can be queued before the player is ready\ntype YTPlayerCommand = {\n    [K in\n        | \"play\"\n        | \"pause\"\n        | \"stop\"\n        | \"seek\"\n        | \"setVolume\"\n        | \"mute\"\n        | \"unMute\"\n        | \"setSize\"\n        | \"setPlaybackRate\"\n        | \"setPlaybackQuality\"]: K extends keyof YouTubePlayer\n        ? YouTubePlayer[K] extends (...args: any) => any\n            ? Parameters<YouTubePlayer[K]>\n            : never\n        : never;\n};\n\n// tuple of a command name and arguments to pass to it\ntype YTPlayerQueueItem = [keyof YTPlayerCommand, YTPlayerCommand[keyof YTPlayerCommand]];\n\nconst YOUTUBE_STATES = {\n    \"-1\": \"unstarted\",\n    0: \"ended\",\n    1: \"playing\",\n    2: \"paused\",\n    3: \"buffering\",\n    5: \"cued\",\n};\n\nconst YOUTUBE_ERROR = {\n    // The request contains an invalid parameter value. For example, this error\n    // occurs if you specify a videoId that does not have 11 characters, or if the\n    // videoId contains invalid characters, such as exclamation points or asterisks.\n    INVALID_PARAM: 2,\n\n    // The requested content cannot be played in an HTML5 player or another error\n    // related to the HTML5 player has occurred.\n    HTML5_ERROR: 5,\n\n    // The video requested was not found. This error occurs when a video has been\n    // removed (for any reason) or has been marked as private.\n    NOT_FOUND: 100,\n\n    // The owner of the requested video does not allow it to be played in embedded\n    // players.\n    UNPLAYABLE_1: 101,\n\n    // This error is the same as 101. It's just a 101 error in disguise!\n    UNPLAYABLE_2: 150,\n};\n\nconst loadIframeAPICallbacks = [];\n\ndeclare global {\n    interface Window {\n        onYouTubeIframeAPIReady: (() => void) | undefined;\n    }\n}\n\nexport interface YoutubePlayerEvent {\n    playing: null;\n    unstarted: null;\n    ended: null;\n    paused: null;\n    unplayable: string;\n    error: Error;\n    stateChange: YT.PlayerState;\n    playbackRateChange: number;\n    playbackQualityChange: string;\n    timeupdate: number;\n    ready: string;\n    buffering: null;\n};\n\n/**\n * YouTube Player. Exposes a better API, with nicer events.\n * @param {HTMLElement|selector} element The element to create the player in, or a selector for the element.\n */\nexport default class YouTubePlayer extends EventEmitter<YoutubePlayerEvent> {\n    private _id: string;\n    private _opts: YTOptions;\n    private _videoId: string | undefined;\n    destroyed: boolean;\n    private _api: typeof YT;\n    private _autoplay: boolean;\n    private _player: YT.Player | undefined;\n    private _ready: boolean;\n    private _queue = new Queue<YTPlayerQueueItem>;\n    private _interval: NodeJS.Timer | null;\n    private _start: number;\n\n\n    constructor(element: string | HTMLElement, opts: YTOptions = {}) {\n        super();\n\n        const elem =\n            typeof element === \"string\"\n                ? document.querySelector(element)\n                : element;\n\n        if (elem.id) {\n            this._id = elem.id; // use existing element id\n        } else {\n            this._id = elem.id =\n                \"ytplayer-\" + Math.random().toString(16).slice(2, 8);\n        }\n\n        this._opts = Object.assign(DefaultOptions, opts);\n\n        this._videoId = null;\n        this.destroyed = false;\n\n        this._api = null;\n        this._autoplay = false; // autoplay the first video?\n        this._player = null;\n        this._ready = false; // is player ready?\n\n        this._interval = null;\n\n        // Setup listeners for 'timeupdate' events. The YouTube Player does not fire\n        // 'timeupdate' events, so they are simulated using a setInterval().\n        this._startInterval = this._startInterval.bind(this);\n        this._stopInterval = this._stopInterval.bind(this);\n\n        this.on(\"playing\", this._startInterval);\n        this.on(\"unstarted\", this._stopInterval);\n        this.on(\"ended\", this._stopInterval);\n        this.on(\"paused\", this._stopInterval);\n        this.on(\"buffering\", this._stopInterval);\n\n        this._loadIframeAPI((err, api) => {\n            if (err)\n                return this._destroy(\n                    new Error(\"YouTube Iframe API failed to load\")\n                );\n            this._api = api;\n\n            // If load(videoId, [autoplay, [size]]) was called before Iframe API\n            // loaded, ensure it gets called again now\n            if (this._videoId)\n                this.load(this._videoId, this._autoplay, this._start);\n        });\n    }\n\n    /**\n     * Load a video by ID, if the YouTube Iframe API is not ready yet it will be deferred\n     * The last video ID given to load will be loaded once the YouTube Iframe API is ready.\n     * @param videoId The YouTube video ID\n     * @param autoplay Whether to play the video immediately (default: false)\n     * @param start Time in seconds to start the video at (default: 0)\n     */\n    load(videoId: string, autoplay = false, start = 0) {\n        if (this.destroyed) return;\n\n        this._videoId = videoId;\n        this._autoplay = autoplay;\n        this._start = start;\n\n        // If the Iframe API is not ready yet, do nothing. Once the Iframe API is\n        // ready, `load(this.videoId)` will be called.\n        if (!this._api) return;\n\n        // If there is no player instance, create one.\n        if (!this._player) {\n            this._createPlayer(videoId);\n            return;\n        }\n\n        // If the player instance is not ready yet, do nothing. Once the player\n        // instance is ready, `load(this.videoId)` will be called. This ensures that\n        // the last call to `load()` is the one that takes effect.\n        if (!this._ready) return;\n\n        // If the player is already playing the requested video, do nothing.\n        if (this.getVideoData()?.video_id === videoId) return;\n\n        // If the player instance is ready, load the given `videoId`.\n        if (autoplay) {\n            this._player.loadVideoById(videoId, start);\n        } else {\n            this._player.cueVideoById(videoId, start);\n        }\n    }\n\n    play() {\n        if (this._ready) this._player.playVideo();\n        else this._queueCommand(\"play\");\n    }\n\n    pause() {\n        if (this._ready) this._player.pauseVideo();\n        else this._queueCommand(\"pause\");\n    }\n\n    stop() {\n        if (this._ready) this._player.stopVideo();\n        else this._queueCommand(\"stop\");\n    }\n\n    seek(seconds: number) {\n        if (this._ready) this._player.seekTo(seconds, true);\n        else this._queueCommand(\"seek\", seconds);\n    }\n\n    setVolume(volume: number) {\n        if (this._ready) this._player.setVolume(volume);\n        else this._queueCommand(\"setVolume\", volume);\n    }\n\n    getVolume() {\n        return (this._ready && this._player.getVolume()) || 0;\n    }\n\n    mute() {\n        if (this._ready) this._player.mute();\n        else this._queueCommand(\"mute\");\n    }\n\n    unMute() {\n        if (this._ready) this._player.unMute();\n        else this._queueCommand(\"unMute\");\n    }\n\n    isMuted() {\n        return (this._ready && this._player.isMuted()) || false;\n    }\n\n    setSize(width: number, height: number) {\n        if (this._ready) this._player.setSize(width, height);\n        else this._queueCommand(\"setSize\", width, height);\n    }\n\n    setPlaybackRate(rate: number) {\n        if (this._ready) this._player.setPlaybackRate(rate);\n        else this._queueCommand(\"setPlaybackRate\", rate);\n    }\n\n    setPlaybackQuality(suggestedQuality: YT.SuggestedVideoQuality) {\n        if (this._ready) this._player.setPlaybackQuality(suggestedQuality);\n        else this._queueCommand(\"setPlaybackQuality\", suggestedQuality);\n    }\n\n    getPlaybackRate() {\n        return (this._ready && this._player.getPlaybackRate()) || 1;\n    }\n\n    getAvailablePlaybackRates() {\n        return (this._ready && this._player.getAvailablePlaybackRates()) || [1];\n    }\n\n    getDuration() {\n        return (this._ready && this._player.getDuration()) || 0;\n    }\n\n    getProgress() {\n        return (this._ready && this._player.getVideoLoadedFraction()) || 0;\n    }\n\n    getState(): YT.PlayerState {\n        return (\n            (this._ready && this._player.getPlayerState()) ||\n            YT.PlayerState.UNSTARTED\n        );\n    }\n\n    getCurrentTime(): number {\n        return (this._ready && this._player.getCurrentTime()) || 0;\n    }\n\n    /**\n     * @returns {HTMLIFrameElement | null} The YouTube iframe element, or `null` if not ready yet.\n     */\n    getIframe(): HTMLIFrameElement | null {\n        return (this._ready && this._player.getIframe()) || null;\n    }\n\n    /**\n     * @returns {YTVideoData | null} The YouTube video data, or `null` if not ready yet.\n     */\n    getVideoData(): YTVideoData | null {\n        // undocumented function that returns video data\n        // @ts-ignore\n        return (this._ready && this._player.getVideoData()) || null;\n    }\n\n    /**\n     * Removes the containing the player.\n     */\n    destroy() {\n        this._destroy();\n    }\n\n    private _destroy(err: Error | null = null) {\n        if (this.destroyed) return;\n        this.destroyed = true;\n\n        if (this._player) {\n            this._player.stopVideo && this._player.stopVideo();\n            this._player.destroy();\n        }\n\n        this._videoId = null;\n\n        this._id = null;\n        this._opts = null;\n        this._api = null;\n        this._player = null;\n        this._ready = false;\n        this._queue = null;\n\n        this._stopInterval();\n\n        this.off(\"playing\", this._startInterval);\n        this.off(\"paused\", this._stopInterval);\n        this.off(\"buffering\", this._stopInterval);\n        this.off(\"unstarted\", this._stopInterval);\n        this.off(\"ended\", this._stopInterval);\n\n        if (err) this.emit(\"error\", err);\n    }\n\n    /**\n     * Queues a command to be executed once the player is ready.\n     * @param command The command to execute.\n     * @param args The arguments to pass to the command.\n     */\n    private _queueCommand<K extends keyof YTPlayerCommand>(\n        command: K,\n        ...args: YTPlayerCommand[K]\n    ) {\n        if (this.destroyed) return;\n        this._queue.enqueue([command, args]);\n    }\n\n    /**\n     * Removes and executes commands from the queue until it is empty.\n     */\n    private _flushQueue() {\n        while (!this._queue.empty) {\n            const command = this._queue.dequeue();\n            this[command[0]].apply(this, command[1]);\n        }\n    }\n\n    /**\n     * Adds the YouTube iframe API script tag to the page if necessary, and\n     * queues the callback to be executed once the script is loaded.\n     * @param cb The callback to execute once the API is ready.\n     */\n    private _loadIframeAPI(cb: Callback<typeof YT>) {\n        // If API is loaded, there is nothing else to do\n        if (window.YT && typeof window.YT.Player === \"function\") {\n            return cb(null, window.YT);\n        }\n\n        // Otherwise, queue callback until API is loaded\n        loadIframeAPICallbacks.push(cb);\n\n        const scripts = Array.from(document.getElementsByTagName(\"script\"));\n        const isLoading = scripts.some(\n            (script) => script.src === YOUTUBE_IFRAME_API_SRC\n        );\n\n        // If API <script> tag is not present in the page, inject it. Ensures that\n        // if user includes a hardcoded <script> tag in HTML for performance, another\n        // one will not be added\n        if (!isLoading) {\n            loadScript(YOUTUBE_IFRAME_API_SRC).catch((err: any) => {\n                while (loadIframeAPICallbacks.length) {\n                    const loadCb = loadIframeAPICallbacks.shift();\n                    loadCb(err);\n                }\n            });\n        }\n\n        const prevOnYouTubeIframeAPIReady = window.onYouTubeIframeAPIReady;\n        window.onYouTubeIframeAPIReady = () => {\n            if (isFunction(prevOnYouTubeIframeAPIReady)) {\n                prevOnYouTubeIframeAPIReady();\n            }\n            while (loadIframeAPICallbacks.length) {\n                const loadCb = loadIframeAPICallbacks.shift();\n                loadCb(null, window.YT);\n            }\n        };\n    }\n\n    /**\n     * Creates the YouTube player object.\n     * @param videoId The YouTube video ID to load.\n     */\n    private _createPlayer(videoId: string) {\n        if (this.destroyed) return;\n        const { width, height, host, ...playerVars } = this._opts;\n\n        this._player = new this._api.Player(this._id, {\n            width: width,\n            height: height,\n            videoId: videoId,\n            host: host,\n            playerVars: playerVars,\n            events: {\n                onReady: () => this._onReady(videoId),\n                onStateChange: (data) => this._onStateChange(data),\n                onPlaybackQualityChange: (data) =>\n                    this._onPlaybackQualityChange(data),\n                onPlaybackRateChange: (data) =>\n                    this._onPlaybackRateChange(data),\n                onError: (data) => this._onError(data),\n            },\n        });\n\n        // TODO: Remove after debugging\n        window[\"__YT_PLAYER\"] = this._player;\n    }\n\n    /**\n     * This event fires when the player has finished loading and is ready to begin\n     * receiving API calls.\n     */\n    private _onReady(videoId: string) {\n        if (this.destroyed) return;\n\n        this._ready = true;\n\n        // Once the player is ready, always call `load(videoId, [autoplay, [size]])`\n        // to handle these possible cases:\n        //\n        //   1. `load(videoId, true)` was called before the player was ready. Ensure that\n        //      the selected video starts to play.\n        //\n        //   2. `load(videoId, false)` was called before the player was ready. Now the\n        //      player is ready and there's nothing to do.\n        //\n        //   3. `load(videoId, [autoplay])` was called multiple times before the player\n        //      was ready. Therefore, the player was initialized with the wrong videoId,\n        //      so load the latest videoId and potentially autoplay it.\n        this.load(this._videoId, this._autoplay, this._start);\n\n        this._flushQueue();\n        this.emit(\"ready\", this._videoId);\n    }\n\n    /**\n     * Called when the player's state changes. We emit friendly events so the user\n     * doesn't need to use YouTube's YT.PlayerState.* event constants.\n     */\n    private _onStateChange(data: YT.OnStateChangeEvent) {\n        if (this.destroyed) return;\n\n        const state = YOUTUBE_STATES[data.data];\n\n        if (state ) {\n            // Send a 'timeupdate' anytime the state changes. When the video halts for any\n            // reason ('paused', 'buffering', or 'ended') no further 'timeupdate' events\n            // should fire until the video unhalts.\n            if ([\"paused\", \"buffering\", \"ended\"].includes(state))\n                this._onTimeupdate();\n\n            this.emit(state as keyof YoutubePlayerEvent, null);\n\n            // When the video changes ('unstarted' or 'cued') or starts ('playing') then a\n            // 'timeupdate' should follow afterwards (never before!) to reset the time.\n            if ([\"unstarted\", \"playing\", \"cued\"].includes(state))\n                this._onTimeupdate();\n        } else {\n            throw new Error(\"Unrecognized state change: \" + data);\n        }\n    }\n\n    /**\n     * This event fires whenever the video playback quality changes. Possible\n     * values are: 'small', 'medium', 'large', 'hd720', 'hd1080', 'highres'.\n     */\n    private _onPlaybackQualityChange(data: YT.OnPlaybackQualityChangeEvent) {\n        if (this.destroyed) return;\n        this.emit(\"playbackQualityChange\", data.data);\n    }\n\n    /**\n     * This event fires whenever the video playback rate changes.\n     */\n    private _onPlaybackRateChange(data: YT.OnPlaybackRateChangeEvent) {\n        if (this.destroyed) return;\n        this.emit(\"playbackRateChange\", data.data);\n    }\n\n    /**\n     * This event fires if an error occurs in the player.\n     */\n    private _onError(data: YT.OnErrorEvent) {\n        if (this.destroyed) return;\n\n        const code = Number(data.data);\n\n        // The HTML5_ERROR error occurs when the YouTube player needs to switch from\n        // HTML5 to Flash to show an ad. Ignore it.\n        if (code === YOUTUBE_ERROR.HTML5_ERROR) return;\n\n        // The remaining error types occur when the YouTube player cannot play the\n        // given video. This is not a fatal error. Report it as unplayable so the user\n        // has an opportunity to play another video.\n        if (\n            code === YOUTUBE_ERROR.UNPLAYABLE_1 ||\n            code === YOUTUBE_ERROR.UNPLAYABLE_2 ||\n            code === YOUTUBE_ERROR.NOT_FOUND ||\n            code === YOUTUBE_ERROR.INVALID_PARAM\n        ) {\n            return this.emit(\"unplayable\", this._videoId);\n        }\n\n        // Unexpected error, does not match any known type\n        this._destroy(\n            new Error(\"YouTube Player Error. Unknown error code: \" + code)\n        );\n    }\n\n    /**\n     * This event fires when the time indicated by the `getCurrentTime()` method\n     * has been updated.\n     */\n    private _onTimeupdate() {\n        this.emit(\"timeupdate\", this.getCurrentTime());\n    }\n\n    private _startInterval() {\n        this._interval = setInterval(() => this._onTimeupdate(), 1000);\n    }\n\n    private _stopInterval() {\n        clearInterval(this._interval);\n        this._interval = null;\n    }\n}\n","import YouTubePlayer from \"./yt\";\n\nconst player = new YouTubePlayer(\"#player\", {\n    width: \"100%\",\n    rel: 0,\n    controls: 1,\n    showinfo: 0,\n    mute: 1,\n    modestbranding: 1,\n    enablejsapi: 1,\n    autoplay: 1,\n    loop: 1,\n});\n\n// maintain a dictionary of videoId -> last played time so we can resume\n// playback if the user navigates away from the tab and then back to it\nconst timeHistory = new Map<string, number>();\n\nconst onMutation = (mutation: MutationRecord) => {\n    const navitem = mutation.target as Element;\n    // if the active attribute was added and is true\n    if (\n        mutation.attributeName === \"active\" &&\n        navitem.hasAttribute(\"active\")\n    ) {\n        // get the videoId from the data-video-id attribute\n        const videoId = navitem.getAttribute(\"data-video-id\");\n        // start the video at the last played time, or 0 if it hasn't been played\n        const start = timeHistory.get(videoId) || 0;\n        player.load(videoId, true, start);\n\n        player.play(); // call play() manually so it plays on mobile\n        player.mute(); // mute the player since we're playing in the background\n    }\n};\n\nconst activeTabObserver = new MutationObserver((mutations) =>\n    mutations.forEach(onMutation)\n);\n\n/**\n * Play the video for the active tab.\n * @param tabnavitems The tabnavitems to watch for changes.\n */\nexport default function playVideoForActiveTabs(tabnavitems: NodeListOf<Element>) {\n    tabnavitems.forEach((navitem) => {\n        activeTabObserver.observe(navitem, { attributes: true });\n    });\n}\n\n// Enable lightbox mode when the player is clicked\nconst playerOverlay = document.getElementById(\"player-overlay\");\nif (!playerOverlay) console.error(\"player-overlay not found\");\n\nplayerOverlay?.addEventListener(\"click\", () => {\n    const playerIFrame = player.getIframe();\n    const enable = !playerIFrame.classList.contains(\"lightbox\");\n    \n    playerIFrame.classList.toggle(\"lightbox\", enable);\n    playerOverlay.classList.toggle(\"lightbox\", enable);\n    \n    if (enable) {\n        player.play();\n        player.unMute();\n        // TODO: Set highest quality available\n        player.setPlaybackQuality(\"hd1080\");\n    } else {\n        player.mute();\n    }\n});\n\nplayer.on(\"timeupdate\", (currentTime) => {\n    // Loop the video if it's at the end\n    if (currentTime === player.getDuration()) {\n        player.play();\n    }\n    // Save the current time for the video so we can resume it later\n    const id = player.getVideoData()?.video_id;\n    timeHistory.set(id, currentTime);\n});\n\n","\n\nexport function isFunction(functionToCheck: unknown): functionToCheck is Function {\n    return functionToCheck && {}.toString.call(functionToCheck) === \"[object Function]\";\n}\n\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import 'https://trevinbrooks.github.io/scroll-timeline/dist/scroll-timeline.js';\nimport playVideoForActiveTabs from './video';\n\nconst {matches:motionOK} = window.matchMedia(\n  '(prefers-reduced-motion: no-preference)'\n)\n\n// grab and stash elements\nconst tabgroup     = document.querySelector('snap-tabs')\nconst tabsection   = tabgroup.querySelector(':scope > section')\nconst tabnav       = tabgroup.querySelector(':scope nav')\nconst tabnavitems  = tabnav.querySelectorAll(':scope a')\nconst tabindicator = tabgroup.querySelector(':scope .snap-indicator')\n\nplayVideoForActiveTabs(tabnavitems);\n/* \n  shared timeline for .indicator \n  and nav > a colors */\n// @ts-ignore\nconst sectionScrollTimeline = new ScrollTimeline({\n  source: tabsection,\n  orientation: 'inline',\n  fill: 'both',\n})\n\n/*\n  for each nav link\n  - animate color based on the scroll timeline\n  - color is active when it's the current index*/\ntabnavitems.forEach(navitem => {\n  navitem.animate({\n      color: [...tabnavitems].map(item => \n        item === navitem\n          ? `var(--text-active-color)`\n          : `var(--text-color)`)\n    }, {\n      duration: 1000,\n      fill:     'both',\n    // @ts-ignore\n      timeline: sectionScrollTimeline,\n    }\n  )\n})\n\nif (motionOK) {\n\n  tabindicator.animate({\n    // @ts-ignore\n      transform: [...tabnavitems].map(({offsetLeft}) =>\n        `translateX(${offsetLeft}px)`),\n    // @ts-ignore\n      width: [...tabnavitems].map(({offsetWidth}) =>\n        `${offsetWidth}px`)\n    }, {\n      duration: 1000,\n      fill:     'both',\n      // @ts-ignore\n      timeline: sectionScrollTimeline\n    }\n  )\n}\n\nconst setActiveTab = tabbtn => {\n  tabnav\n    .querySelector(':scope a[active]')\n    .removeAttribute('active')\n  \n  tabbtn.setAttribute('active', '')\n  tabbtn.scrollIntoView()\n}\n \nconst determineActiveTabSection = () => {\n  const i = tabsection.scrollLeft / tabsection.clientWidth\n  const matchingNavItem = tabnavitems[i]\n  \n  matchingNavItem && setActiveTab(matchingNavItem)\n}\n\ntabnav.addEventListener('click', e => {\n  if (e.target[\"nodeName\"] !== \"A\") return\n  setActiveTab(e.target)\n})\n\ntabsection.addEventListener('scroll', () => {\n  clearTimeout(tabsection[\"scrollEndTimer\"])\n  tabsection[\"scrollEndTimer\"] = setTimeout(\n    determineActiveTabSection\n  , 100)\n})\n\nwindow.onload = () => {\n  if (location.hash)\n    tabsection.scrollLeft = document\n        .querySelector(location.hash)[\"offsetLeft\"]\n    \n  determineActiveTabSection()\n}"],"names":["constructor","this","emitter","NodeEmitter","on","eventName","fn","off","emit","params","loadScript2","src","attrs","parentNode","Promise","resolve","reject","script","document","createElement","async","k","v","entries","setAttribute","onload","onerror","n","Error","getElementsByTagName","appendChild","DefaultOptions","width","videoId","undefined","rel","origin","location","controls","showinfo","mute","modestbranding","enablejsapi","autoplay","loop","Queue","Infinity","capacity","events","EventEmitter","storage","enqueue","item","size","push","dequeue","remove","shift","length","empty","YOUTUBE_STATES","YOUTUBE_ERROR","loadIframeAPICallbacks","player","YouTubePlayer","sa","element","opts","super","_queue","querySelector","_id","elem","id","Math","random","toString","slice","_opts","Object","assign","_videoId","destroyed","_api","_autoplay","_player","_ready","_interval","_startInterval","bind","_stopInterval","_loadIframeAPI","err","api","_destroy","load","_start","start","getVideoData","_a","video_id","loadVideoById","cueVideoById","_createPlayer","play","playVideo","_queueCommand","pause","pauseVideo","stop","stopVideo","seek","seconds","seekTo","setVolume","volume","getVolume","unMute","isMuted","setSize","height","setPlaybackRate","rate","setPlaybackQuality","suggestedQuality","getPlaybackRate","getAvailablePlaybackRates","getDuration","getProgress","getVideoLoadedFraction","getState","getPlayerState","YT","PlayerState","UNSTARTED","getCurrentTime","getIframe","destroy","command","args","_flushQueue","apply","cb","window","Player","from","some","YOUTUBE_IFRAME_API_SRC","loadScript","catch","onYouTubeIframeAPIReady","prevOnYouTubeIframeAPIReady","call","host","playerVars","__rest","s","e","p","t","prototype","hasOwnProperty","indexOf","getOwnPropertySymbols","i","propertyIsEnumerable","onReady","_onReady","onStateChange","data","_onStateChange","onPlaybackQualityChange","_onPlaybackQualityChange","onPlaybackRateChange","_onPlaybackRateChange","onError","_onError","__YT_PLAYER","state","includes","_onTimeupdate","code","Number","setInterval","clearInterval","timeHistory","Map","onMutation","mutation","navitem","target","attributeName","hasAttribute","getAttribute","get","activeTabObserver","MutationObserver","mutations","forEach","playerOverlay","getElementById","addEventListener","enable","playerIFrame","classList","contains","toggle","h","currentTime","f","set","matches","motionOK","matchMedia","tabgroup","tabsection","tabnav","tabnavitems","querySelectorAll","tabindicator","observe","attributes","sectionScrollTimeline","ScrollTimeline","source","orientation","fill","animate","color","map","duration","timeline","transform","_ref","offsetLeft","_ref2","offsetWidth","setActiveTab","tabbtn","removeAttribute","scrollIntoView","determineActiveTabSection","matchingNavItem","scrollLeft","clientWidth","nodeName","clearTimeout","scrollEndTimer","Q","setTimeout","hash"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;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","x_google_ignoreList":[1,7]}